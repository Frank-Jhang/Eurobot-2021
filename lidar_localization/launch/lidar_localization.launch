<launch>
    <arg name="init_x_" default="0.932" />
    <arg name="init_y_" default="2.68" />
    <arg name="init_yaw_" default="-1.5707963" />
    <!-- <node name="map_to_odom" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 1 map odom"/> -->
    <node name="base_to_laser" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 -0.044 0.999 base_footprint laser_frame"/>
    <node name="base_footprint_to_base_link" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 1 base_footprint base_link"/>
    
    <!-- <node name="scans_merger" pkg="obstacle_detector" type="scans_merger_node" output="screen">
        <param name="active" value="true"/>
        <param name="publish_scan" value="true"/>
        <param name="publish_pcl" value="false"/>

        <param name="ranges_num" value="1000"/>

        <param name="min_scanner_range" value="0.05"/>
        <param name="max_scanner_range" value="10.0"/>

        <param name="min_x_range" value="-10.0"/>
        <param name="max_x_range" value="10.0"/>
        <param name="min_y_range" value="-10.0"/>
        <param name="max_y_range" value="10.0"/>

        <param name="fixed_frame_id" value="odom"/>
        <param name="target_frame_id" value="map"/>

        <remap from="front_scan" to="scan"/>
        <remap from="scan" to="scan_map"/>
    </node> -->

    <node name="beacon_extractor" pkg="obstacle_detector" type="obstacle_extractor_node">
        <param name="active" value="true"/>
        <param name="use_scan" value="true"/>
        <param name="use_pcl" value="false"/>

        <param name="use_split_and_merge" value="true"/>
        <param name="circles_from_visibles" value="true"/>
        <param name="discard_converted_segments" value="false"/>
        <param name="transform_coordinates" value="true"/>

        <param name="min_group_points" value="2"/>

        <param name="max_group_distance" value="0.04"/>
        <param name="distance_proportion" value="0.00628"/>
        <param name="max_split_distance" value="0.02"/>
        <param name="max_merge_separation" value="0.1"/>
        <param name="max_merge_spread" value="0.02"/>
        <param name="max_circle_radius" value="0.2"/>
        <param name="radius_enlargement" value="0.05"/>

        <param name="frame_id" value="base_footprint"/>
        <remap from="raw_obstacles" to="obstacles_to_base"/>
    </node>

    <node name="obstacle_extractor" pkg="obstacle_detector" type="obstacle_extractor_node">
        <param name="active" value="true"/>
        <param name="use_scan" value="true"/>
        <param name="use_pcl" value="false"/>

        <param name="use_split_and_merge" value="true"/>
        <param name="circles_from_visibles" value="true"/>
        <param name="discard_converted_segments" value="false"/>
        <param name="transform_coordinates" value="true"/>

        <param name="min_group_points" value="2"/>

        <param name="max_group_distance" value="0.04"/>
        <param name="distance_proportion" value="0.00628"/>
        <param name="max_split_distance" value="0.02"/>
        <param name="max_merge_separation" value="0.1"/>
        <param name="max_merge_spread" value="0.02"/>
        <param name="max_circle_radius" value="0.2"/>
        <param name="radius_enlargement" value="0.05"/>

        <param name="frame_id" value="map"/>
        <remap from="raw_obstacles" to="obstacles_to_map"/>
    </node>

    <node name="lidar_localization" pkg="lidar_localization" type="lidar_localization_node" output="screen">
        <param name="active" value="true"/>

        <param name="cov_x" value="0.2"/>
        <param name="cov_y" value="0.2"/>
        <param name="cov_yaw" value="0.1"/>

        <param name="beacon_1_x" value="1"/>
        <param name="beacon_1_y" value="-0.092"/>
  
        <param name="beacon_2_x" value="0.055"/>
        <param name="beacon_2_y" value="3.1"/>
  
        <param name="beacon_3_x" value="1.953"/>
        <param name="beacon_3_y" value="3.1"/>
        <param name="theta" value="0"/>

        <param name="obstacle_topic" value="obstacles_to_base"/>
        <param name="beacon_parent_frame_id" value="map"/>
        <param name="beacon_frame_id_prefix" value="beacon"/>
        <param name="robot_parent_frame_id" value="map"/>
        <param name="robot_frame_id" value="base_footprint"/>
    </node>
    
    <!-- <node name="area_obstacles_extractor" pkg="lidar_localization" type="area_obstacles_extractor_node" output="screen"/> -->

    <node name="rx_to_odom" pkg="lidar_localization" type="rx_to_odom">
        <param name="active" value="true"/>
        <param name="publish_topic" value="true"/>
        <param name="init_x" value="$(arg init_x_)"/>
        <param name="init_y" value="$(arg init_y_)"/>
        <param name="init_yaw" value="$(arg init_yaw_)"/>
        <param name="cov_vx" value="0.05"/>
        <param name="cov_vyaw" value="0.05"/>
        <param name="delay" value="1"/>
    </node>

    <!-- set pose for EKF -->
    <node pkg="robot_localization" type="initial_pose" name="initial_pose">
      <param name="x" value="$(arg init_x_)"/>
      <param name="y" value="$(arg init_y_)"/>
      <param name="theta" value="$(arg init_yaw_)"/>
    </node>

    <!-- rviz -->
    <arg name="open_rviz" default="true"/>
    <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find testbot)/rviz/EKF_validation.rviz"/>
    </group> 

    <!-- Map server -->
    <arg name="map_file" default="$(find testbot)/maps/map.yaml"/>
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

    <!-- EKF -->
    <include file="$(find robot_localization)/launch/ekf_template.launch"/>

    <!-- robot model -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <!--planner to ST : v,w,initial pose-->
    <node pkg="testbot" name = "planner_to_ST" type = "planner_to_ST"  output="screen">
      <param name="init_x" value="$(arg init_x_)"/>
      <param name="init_y" value="$(arg init_y_)"/>
      <param name="init_yaw" value="$(arg init_yaw_)"/>
    </node>

</launch>
